spring:
  profiles:
    active:  #表示激活开发环境

  datasource:
    username: root
    password:
    url: jdbc:mysql://localhost:3306/liqiatao?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver

  # rabbitmq
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    # 开启confirms回调 P -> Exchange
    # 开启returnedMessage回调 Exchange -> Queue
    publisher-returns: true
    # 设置手动确认(ack) Queue -> C
    listener:
      simple:
        # 消费接收确认机制-手动确认
        acknowledge-mode: manual
        # 消费者每次从队列获取的消息数量。写多了，如果长时间得不到消费，数据就一直得不到处理
        prefetch: 1
        # 消费者数量
        concurrency: 5
        # 最大消费者数量
        max-concurrency: 10
    publisher-confirm-type: correlated
    virtual-host: /
mq:
  env: local
#订单处理队列
#交换机名称
order:
  mq:
    exchange:
      name: ${mq.env}:order:mq:exchange
    #队列名称
    queue:
      name: ${mq.env}:order:mq:queue
    #routingkey
    routing:
      key: ${mq.env}:order:mq:routing:key

#支付处理队列

pay:
  mq:
    #主交换机
    exchange:
      name: ${mq.env}:pay:mq:exchange
    #主队列
    queue:
      name: ${mq.env}:pay:mq:queue
    #主routingkey
    routing:
      key: ${mq:env}:pay:mq:routing:key
    ttl: 5000

  dead-letter:
    mq:
      #死信交换机（DLX)
      exchange:
        name: ${mq.env}:pay:dead-letter:mq:exchange
      #死信队列
      queue:
        name: ${mq.env}:pay:dead-letter:mq:queue
      #死信routingkey(DLK)
      routing:
        key: ${mq.env}:pay:dead-letter:mq:routing:key
  #支付超时时间（毫秒）（TTL）,测试原因，这里模拟5秒，如果是生产环境，这里可以是15分钟等




  # mail
  mail:
    host: smtp.163.com
    username: loveleeahaaha@163.com
    password: 19960213501x
    from: loveleeahaaha@163.com
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    # Redis数据源
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # 连接超时时间（毫秒
    timeout: 6000
    # Redis服务器连接密码（默认为空）
    password:
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接